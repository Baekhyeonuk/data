
데이터베이스

기본키: 필드를 구분 할 수 있는 칼럼

select * from 테이블 (해당 테이블 전체 조회)
select userID,name 테이블명(해당 테이블명 userID,name만 조회)

select * from userTbl where name='성시경';

AND  모든 조건이 만족 될 때
OR  하나 이상이 만족 될 때

4. LIKE
 이름이 김으로 시작하는 사람들의  이름과 지역 조회

select name, addr from userTbl where name LIKE '김%';

이름이  지원인 사람 

select Name, addr from userTbl where name like "_지원";

6. ORDER BY 컬럼명 ASC, DESC
오름차순 : abcd , ㄱㄴㄷㄹ 12345
select name, addr from userTbl ORDER BY name ASC;

지역 오름차순 정렬, 이름순으로 정렬 
select name, addr from userTbl ORDER BY addr ASC, name ASC;

7. 중복된 것은 하나만 남기는 DISTINCT
중복된 것을 골라서 세기 어려울  때  사용하는 구문
테이블의 크기가 클수록 
중복된 것은 1개씩만 보여주면서 출력 

8. 출력하는 개수를 제한하는 LIMIT
일부를 보기 위해 여러 건의 데이터를  출력하는 부담 줄임
상위의 N개만 출력하는 'LIMIT N'구문 사용

LIMIT 시작 행, 

SELECT * FROM buyTbl LIMIT 5;
SELECT * FROM buyTbl LIMIT 5,5;

9. GROUP BY
그룹으로 묶어주는 역할.
집계 함수 함께사용

SUM()
AVG()
MIN()
MAX()
COUNT()

고객 아이디 별로 구매한 가격(price*amount) 총 합 
select userID, AVG(price*amount) from buyTbl GROUP BY userID;

상품명 별로 구매한 가격 총합
select prodName, SUM(price*amount) from buyTbl GROUP BY prodName;

상품 별 구매횟수, 상품명을 구매 테이블에서 출력

SELECT COUNT(prodName), prodName from buyTbl GROUP BY prodName;

10. Having
GROUP BY 절 다음에 나와야함.


사용자 별 아이디, 총 구매액 출력
select userID, SUM(price*amount) from buyTbl GROUP BY userID;

(where SUM(price*amount)>=1000) 
집계함수가 들어있을땐 having
총 구매액이 1000 이상인 내역만 출력.
select userID, SUM(price*amount) from buyTbl GROUP BY userID HAVING SUM(price*amount)>=1000;

평균 금액이 200  이상 인 내역만 출력
select userID, AVG(price*amount) from buyTbl GROUP BY userID HAVING AVG(price*amount)>=200;

SELECT-FROM-WHERE-GROUP BY-HAVING-ORDER BY

 총 구매액이 1000이상인  구매내역을 출력
userID, SUM
userID 오름차순 정렬.

select userID, SUM(price*amount) from buyTbl GROUP BY userID HAVING SUM(price*amount)>=1000 ORDER BY userID ASC;
합계순으로 오름차순 정렬.
select userID, SUM(price*amount) from buyTbl GROUP BY userID HAVING SUM(price*amount)>=1000 ORDER BY SUM(price*amount) ASC;

<컬럼 유형>
**텍스트**
CHAR(size)
VARCHAR(size)

CHAR(5)==> abc00
VARCHAR(5)==> abc (가변적)

TEXT
BLOB
LONGTEXT 최대 4G

<숫자>
TINYINT
SMALLINT
INT
FLOAT

<날짜>
DATE()      YYYY-MM-DD
DATETIME()  YYYY-MM-DD HH:MI:SS

<데이터 입력>
CREATE TABLE Persons(
 ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY, Name varchar(10) NOT NULL, Age TINYINT
);

DESC Persons;

INSERT INTO table_name(컬럼1, 컬럼2, 컬럼3) 
VALUES(밸류1,밸류2,밸류3);

INSERT INTO Persons(Name, Age) 
VALUES('이순신',32);
INSERT INTO Persons(Name, Age)
VALUES('',10);

INSERT INTO Persons(NULL, "손흥민", 25);
AUTO_INCREMENT  설정된 컬럼은 NULL 

< 데이터 갱신>

UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;

Persons  에서 id가 2인 사용자의 이름을 '홍길동' 

UPDATE Persons SET name='홍길동' WHERE ID=2;

UPDATE buyTbl SET userID='aaa' WHERE num=1;
( 외래키로 관계되어있는건 수정불가)

< 데이터 삭제>

DELETE FROM table_name
WHERE condition;
(조건 안 넣으면 전체삭제됨)
DELETE FROM Persons
WHERE ID=4;

DROP TABLE 테이블명 ==> 테이블 삭제

DROP TABLE IF EXISTS Persons;
CREATE TABLE Persons (
ID varchar(10) PRIMARY KEY,
LastName varchar(10) NOT NULL,
FirstName varchar(10),
Age int
);

insert into Persons
values("AAA","길동","홍",30);
insert into Persons
values("BBB","순신","이",35);
insert into Persons
values("","흥민","손",35);
insert into Persons
values("CCC","지성","박",35);

연습문제
1.아이디가 'KBS' 인 사용자의 총 구매액, 평균구매액을 출력하시오.
select userID,SUM(price*amount),AVG(price*amount) from buyTbl WHERE userID='KBS' GROUP BY userID ;

2.아이디별 평균 구매금액이 100 에서 500 사이의 사용자의 아이디, 평균구매액을 출력하시오
select userID,AVG(price*amount) from buyTbl GROUP BY userID HAVING AVG(price*amount)>=100 AND  500>=AVG(price*amount);

3.아이디별 구매횟수가 3번 이상인 사용자의 아이디, 구매횟수를 출력하고 구매횟수 내림차순으로 정렬하시오.
select userID,COUNT(amount) from buyTbl GROUP BY userID HAVING COUNT(amount)>=3 ORDER BY COUNT(amount) DESC;

4.아이디별 구매횟수가 2번 이상인 사용자의 아이디, 구매횟수, 평균 구매금액을 출력하고 아이디 오름차순으로 정렬하시오. 
select userID,COUNT(amount),AVG(price*amount) from buyTbl GROUP BY userID HAVING COUNT(amount)>=2 ORDER BY userID ASC;

5.상품별로 총 구매 금액이 1000원보다 큰 금액인 제품의 제품명, 그룹명, 총 구매금액을 출력하시요.
select prodName,groupName,SUM(price*amount) from buyTbl GROUP BY prodName HAVING SUM(price*amount)>=1000;

6.상품별로 총 구매액이 150 보다 크고 그룹명이 '전자' 인 
상품명, 그룹명, 총 구매액을 상품명 오름차순으로 출력하시오.
select prodName,groupName,SUM(price*amount) from buyTbl WHERE groupName='전자' GROUP BY prodName HAVING SUM(price*amount)>=150 ORDER BY prodName ASC;
